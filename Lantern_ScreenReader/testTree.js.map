{
  "version": 3,
  "file": "testTree.js",
  "sourceRoot": "",
  "sources": [
    "testTree.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "#import jsonld from './node_modules/jsonld'\r\n#import jsonldRdfaParser from './node_modules/jsonld-rdfa-parser'\r\n\r\njsonld = require('./node_modules/jsonld') #todo locate it\r\njsonldRdfaParser = require('./node_modules/jsonld-rdfa-parser')\r\n\r\nclass Section\r\n  constructor: (element, content='C:/Users/Kanan-PC/Desktop/Lantern/Lantern_Examples/Lantern.owl/contains') ->\r\n    @id = element['@id']\r\n    @name = element['C:/Users/Kanan-PC/Desktop/Lantern/Lantern_Examples/Lantern.owl/name'][0]['@value']\r\n    @addChildrenIds(element, content)\r\n\r\n  addChildrenIds: (element, content) ->\r\n    @children = []\r\n    ids = element[content]\r\n    if not ids?\r\n      return\r\n    if typeof(ids) == 'object' #if multiple children\r\n      for id in ids #todo [udnefined, undefined] at end\r\n        @children.push(id['@id'])\r\n    else\r\n      @children.push(ids['@id'])\r\n\r\n  addChildren: (elements) ->\r\n    len = @children.length\r\n    for i in [0...len]\r\n      id = @children[i]\r\n      @children[i] = elements[id][0]\r\n      elements[id][0].parents = @\r\n      elements[id][1] += 1\r\n\r\n  onAction: () ->\r\n    return @children\r\n\r\n\r\nclass aText extends Section\r\n  constructor: (element) ->\r\n    super(element, 'C:/Users/Kanan-PC/Desktop/Lantern/Lantern_Examples/Lantern.owl/alternatives')\r\n    @content = element['C:/Users/Kanan-PC/Desktop/Lantern/Lantern_Examples/Lantern.owl/content']?[0]['@value']\r\n\r\n  onAction: () ->\r\n    if @children.length == 0\r\n      return @children\r\n    else if @content?\r\n#alert @content #todo read aloud\r\n      console.log @content\r\n\r\nclass Media extends Section\r\n  constructor: (element) ->\r\n    super(element)\r\n    @source = element['C:/Users/Kanan-PC/Desktop/Lantern/Lantern_Examples/Lantern.owl/source']?[0]['@value']\r\n\r\n  onAction: () ->\r\n    if @source?\r\n      console.log @source #todo play source\r\n\r\nclass Form extends Section\r\n  constructor: (element) ->\r\n    super(element)\r\n    @source = element['C:/Users/Kanan-PC/Desktop/Lantern/Lantern_Examples/Lantern.owl/source']?[0]['@value']\r\n\r\n  onAction: () ->\r\n    if @source?\r\n      console.log @source #todo place cursor on button\r\n\r\n\r\nclass Button extends Section\r\n  constructor: (element) ->\r\n    super(element)\r\n    @source = element['C:/Users/Kanan-PC/Desktop/Lantern/Lantern_Examples/Lantern.owl/source']?[0]['@value']\r\n\r\n  onAction: () ->\r\n    if @source?\r\n      console.log @source #todo go to link\r\n\r\nclass Comments\r\n  constructor: (element) ->\r\n\r\nclass notification\r\n  constructor: (element) ->\r\n\r\nclass tree\r\n  constructor: (elements) ->\r\n    @children = []\r\n    for key of elements\r\n      element = elements[key]\r\n      if element[1] == 0\r\n        element[0].parent = @\r\n        @children.push(element[0])\r\n\r\n#each class has id\r\naddElement = (element) ->\r\n  Type = element[\"@type\"][0]\r\n  filter = /[A-Za-z]*$/\r\n  Type = filter.exec(Type)[0]\r\n  obj = null\r\n\r\n  switch Type\r\n    when 'section' then new Section(element)\r\n    when 'text' then new aText(element)\r\n    when 'media' then new Media(element)\r\n    when 'form' then new Form(element)\r\n    when 'button' then new Button(element)\r\n    when 'comment' then new Comments(element)\r\n    when 'notification' then new notification(element)\r\n    else null\r\n\r\nconsole.log 'here'\r\n\r\nsrc = 'C:\\\\Users\\\\Kanan-PC\\\\Desktop\\\\Lantern\\\\Example\\\\Example2.html'\r\ncontent = null\r\njsonld.registerRDFParser 'text/html', jsonldRdfaParser\r\njsonld.fromRDF src, {format: 'text/html'}, (err, data) ->\r\n  content = data\r\n\r\nconsole.log jsonld\r\nelements = {}\r\nmark = 0\r\nfor element in content\r\n#Skip declarations\r\n  if mark == 0\r\n    mark = 1\r\n    continue\r\n\r\n  node = addElement(element)\r\n  if not node?\r\n    continue\r\n\r\n  a = [node, 0]\r\n  elements[node.id] = a\r\n\r\n#elements = {id: [node, 0]...}\r\nfor key of elements\r\n  element = elements[key][0]\r\n  element.addChildren(elements)\r\n\r\nroot = new tree(elements)\r\nelements =\r\n  elements: root.children,\r\n  index: 0,\r\n  notifications: []\r\n\r\nchrome.storage.local.set {test: elements}"
  ]
}