{
  "version": 3,
  "file": "background.js",
  "sourceRoot": "",
  "sources": [
    "background.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "###\r\nHelpers\r\n###\r\n\r\njsonld = require('../node_modules/jsonld')\r\njsonldRdfaParser = require('../node_modules/jsonld-rdfa-parser')\r\n\r\nclass Section\r\n  constructor: (element, content='contains') ->\r\n    @id = element['@id']\r\n    key = findKey(element, 'name')\r\n    @name = element[key][0]['@value']\r\n    @type = 'section'\r\n    @addChildrenIds(element, content)\r\n\r\n  addChildrenIds: (element, content) ->\r\n    @children = []\r\n    content = findKey(element, content)\r\n    ids = element[content]\r\n    if not ids?\r\n      return\r\n    if typeof(ids) == 'object' #if multiple children\r\n      for id in ids\r\n        @children.push(id['@id'])\r\n    else\r\n      @children.push(ids['@id'])\r\n\r\n  addChildren: (elements) ->\r\n    len = @children.length\r\n    for i in [0...len]\r\n      id = @children[i]\r\n      elements[id][0].parent = @id\r\n      @children[i] = elements[id][0]\r\n      elements[id][1] += 1\r\n\r\n  onAction: () ->\r\n    return @children\r\n\r\n\r\nclass aText extends Section\r\n  constructor: (element) ->\r\n    super(element, 'alternatives')\r\n    key = findKey(element, 'content')\r\n    @content = element[key]?[0]['@value']\r\n    @type = 'text'\r\n\r\n  onAction: () ->\r\n    if @children.length > 0\r\n      return @children\r\n    else if @content?\r\n      chrome.tts.speak(@content)\r\n      console.log @content\r\n\r\nclass Media extends Section\r\n  constructor: (element) ->\r\n    super(element)\r\n    key = findKey(element, 'source')\r\n    @source = element[key]?[0]['@id']\r\n    key = findKey(element, 'type', true)\r\n    @mediaType = element[key]?[0]['@value']\r\n    @type = 'media'\r\n\r\n  onAction: () ->\r\n    if @source?\r\n      console.log @source #todo play source\r\n\r\nclass Form extends Section\r\n  constructor: (element) ->\r\n    super(element)\r\n    key = findKey(element, 'source')\r\n    @source = element[key]?[0]['@value']\r\n    @type = 'form'\r\n\r\n  onAction: () ->\r\n    if @source?\r\n      console.log @source #todo place cursor on button\r\n\r\n\r\nclass Button extends Section\r\n  constructor: (element) ->\r\n    super(element)\r\n    key = findKey(element, 'source')\r\n    @source = element[key]?[0]\r\n    if '@id' in Object.keys(@source)\r\n      @source = @source['@id']\r\n      @buttonType = 'link'\r\n    else\r\n      @source = @source['@value']\r\n      @buttonType = 'button'\r\n    @type = 'button'\r\n\r\n  onAction: () ->\r\n    if @source?\r\n      console.log @source #todo go to link\r\n\r\nclass Comments\r\n  constructor: (element) ->\r\n\r\nclass notification\r\n  constructor: (element) ->\r\n\r\nclass tree\r\n  constructor: (elements) ->\r\n    @children = []\r\n    for key of elements\r\n      element = elements[key]\r\n      if element[1] == 0\r\n        @children.push(element[0])\r\n\r\n#each class has id\r\naddElement = (element) ->\r\n  Type = element[\"@type\"][0]\r\n  filter = /[A-Za-z]*$/\r\n  Type = filter.exec(Type)[0]\r\n  obj = null\r\n\r\n  switch Type\r\n    when 'section' then new Section(element)\r\n    when 'text' then new aText(element)\r\n    when 'media' then new Media(element)\r\n    when 'form' then new Form(element)\r\n    when 'button' then new Button(element)\r\n    when 'comment' then new Comments(element)\r\n    when 'notification' then new notification(element)\r\n    else null\r\n\r\nfindKey = (dict, key, exclude=false) ->\r\n  for k of dict\r\n    filter = /[A-Za-z]*$/\r\n    match = filter.exec(k)[0]\r\n\r\n    if exclude\r\n      if '@' in k\r\n        continue\r\n\r\n    if match == key\r\n      return k\r\n\r\nreadMenu = (menu, index) ->\r\n  len = menu.length\r\n  more = 0\r\n  if len - index > 4\r\n    more = 1\r\n    len = index + 4\r\n\r\n  for i in [index...len]\r\n    element = menu[i]\r\n    chrome.tts.speak(element.name, {'enqueue': true})\r\n\r\n  if more == 1\r\n    chrome.tts.speak('more', {'enqueue': true})\r\n\r\ngetParent = (elements) ->\r\n  menu = elements['elements'][0].parent\r\n  nodes = elements['nodes']\r\n  if findKey(nodes, menu)?\r\n    return null\r\n  parent = nodes[menu]?[0].parent\r\n\r\n  if not menu?\r\n    return elements['elements']\r\n  else if not parent?\r\n    list = []\r\n    for key of nodes\r\n      node = nodes[key]\r\n      if node[1] == 0\r\n        list.push(node[0])\r\n    return list\r\n  else\r\n    return nodes[parent][0].children\r\n\r\nonAction = (element) ->\r\n  type = element.type\r\n  if element.children.length > 0\r\n    return element.children\r\n  else\r\n    switch type\r\n      when 'text' then speak(element.content)\r\n      when 'media' then play(element.source, element.mediaType)\r\n      when 'form' then place(element.source)\r\n      when 'button' then click(element.source)\r\n\r\nspeak = (content) ->\r\n  if content?\r\n    chrome.tts.speak(content)\r\n\r\nplay = (source, type) ->\r\n  console.log source, type\r\n  chrome.tabs.executeScript {code:\r\n    \"var script = document.createElement('script');\r\n     script.id = 'mediaFunctions';\r\n     script.text = 'function play() {\r\n                media.play();\r\n            }\r\n            function pause() {\r\n                media.pause();\r\n            }\r\n            media = new #{type}(\\\\'#{source}\\\\');';\r\n\r\n     var play = document.createElement('script');\r\n     play.id = 'playMedia';\r\n     play.text = 'media.play()';\r\n\r\n     document.body.appendChild(script);\r\n     document.body.appendChild(play);\r\n\"}\r\n\r\nplace = (source) ->\r\n  chrome.tabs.executeScript {code: \"\r\n    document.getElementById('#{source}').focus();\r\n\"}, ->\r\n    chrome.tts.speak('Write')\r\n\r\nclick = (source) ->\r\n  chrome.tabs.executeScript {code: \"\r\n    try{\r\n      new URL('#{source}');\r\n      window.location = '#{source}'\r\n    }\r\n    catch (_){\r\n      document.getElementById('#{source}').click();\r\n    }\r\n\"}\r\n\r\n###\r\n  Listens for events in the browser, if it's triggered it runs and then unloads itself\r\n###\r\n\r\nchrome.runtime.onInstalled.addListener ->\r\n  #storage lets multiple extension components access this parameter\r\n  chrome.storage.sync.set {s: '#3aa757'}, ->\r\n    console.log \"green\"\r\n\r\n#loaded when needed and then removed\r\nchrome.declarativeContent.onPageChanged.removeRules undefined, ->\r\n  chrome.declarativeContent.onPageChanged.addRules [\r\n    conditions: [new chrome.declarativeContent.PageStateMatcher\r\n      pageUrl: {hostEquals: 'developer.chrome.com'}\r\n    ],\r\n    actions: [new chrome.declarativeContent.ShowPageAction]\r\n  ]\r\n\r\n#listen for RDFa elements\r\nchrome.runtime.onMessage.addListener (request, sender, sendResponse) ->\r\n  content = request.test\r\n  console.log request.test #todo\r\n\r\n  elements = {}\r\n  mark = 0\r\n  for element in content\r\n    #Skip declarations\r\n\r\n    try\r\n      node = addElement(element)\r\n    catch _\r\n      continue\r\n\r\n    if not node?\r\n      continue\r\n\r\n    a = [node, 0]\r\n    elements[node.id] = a\r\n\r\n  #elements = {id: [node, 0]...}\r\n  for key of elements\r\n    element = elements[key][0]\r\n    element.addChildren(elements)\r\n\r\n  root = new tree(elements)\r\n  elements =\r\n    elements: root.children,\r\n    index: 0,\r\n    notifications: [],\r\n    nodes: elements\r\n\r\n  console.log 'background.coffee'\r\n  console.log elements\r\n  readMenu(elements['elements'], 0)\r\n  chrome.storage.local.set {tree: elements}\r\n\r\n#TODO use onPageChange\r\n#If no tree, or new page, or page change\r\n  #parse tree (content script)\r\n  #read elements name (function)\r\n\r\n#On refresh rate\r\n  #parse page for notifications\r\n  #add list to notifications, change index to 0\r\n  #if change read elements name using index\r\n\r\n#Notifications OPTIONAL\r\n#Keep list of elements, {elements: [], index = 0, notifications: []}\r\n#when issuing command, if index >= len(notifications) element[index] else notifications[index]\r\n\r\n#todo OPTIONAL, listen for changes\r\n\r\n#Commands must be issued with Ctrl\r\nchrome.commands.onCommand.addListener (command) ->\r\n  console.log command\r\n  chrome.tts.stop()\r\n\r\n  #Before we use the new command, stop any previous commands\r\n  chrome.tabs.executeScript {file: 'pause.js'}, ->\r\n\r\n    chrome.storage.local.get ['tree'], (result) ->\r\n      elements = result.tree\r\n      if not elements? #The tree is still not generated\r\n        console.log 'no elements'\r\n        return\r\n\r\n      keyPress = -1\r\n      prev = false\r\n      switch command\r\n        when 'first' then keyPress = 0\r\n        when 'second' then keyPress = 1\r\n        when 'third' then keyPress = 2\r\n        when 'fourth' then keyPress = 3\r\n        when 'more' then keyPress = 4\r\n        when 'previous' then prev = true\r\n        when 'repeat' then readMenu(elements['elements'], elements['index'])\r\n\r\n      index = elements['index']\r\n      if keyPress != -1\r\n        menu = elements['elements']\r\n        notification = elements['notification']\r\n\r\n        len = menu.length\r\n\r\n        if keyPress == 4\r\n          index += 4\r\n          elements['index'] = index\r\n\r\n          readMenu(elements['elements'], index)\r\n          chrome.storage.local.set {tree: elements}\r\n        else if index + keyPress < len\r\n          index = index + keyPress\r\n          list = onAction(menu[index])\r\n\r\n          if list?\r\n            elements =\r\n              elements: list,\r\n              index: 0,\r\n              notifications: [],\r\n              nodes: elements['nodes']\r\n\r\n            chrome.storage.local.set {tree: elements}\r\n            readMenu(elements['elements'], 0)\r\n      else if prev\r\n        if index != 0\r\n          index -= 4\r\n          elements =\r\n            elements: elements['elements'],\r\n            index: index,\r\n            notifications: [],\r\n            nodes: elements['nodes']\r\n\r\n          chrome.storage.local.set {tree: elements}\r\n        else\r\n          list = getParent(elements)\r\n          elements =\r\n            elements: list,\r\n            index: index,\r\n            notifications: [],\r\n            nodes: elements['nodes']\r\n\r\n          chrome.storage.local.set {tree: elements}\r\n\r\n\r\n        readMenu(elements['elements'], index)\r\n\r\n      console.log elements\r\n"
  ]
}