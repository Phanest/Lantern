{
  "version": 3,
  "file": "background.js",
  "sourceRoot": "",
  "sources": [
    "background.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "###\r\nHelpers\r\n###\r\n\r\njsonld = require('../node_modules/jsonld')\r\njsonldRdfaParser = require('../node_modules/jsonld-rdfa-parser')\r\n\r\nclass Section\r\n  constructor: (element, content='C:/Users/Kanan-PC/Desktop/Lantern/Lantern_Examples/Lantern.owl/contains') ->\r\n    @id = element['@id']\r\n    @name = element['C:/Users/Kanan-PC/Desktop/Lantern/Lantern_Examples/Lantern.owl/name'][0]['@value']\r\n    @addChildrenIds(element, content)\r\n\r\n  addChildrenIds: (element, content) ->\r\n    @children = []\r\n    ids = element[content]\r\n    if not ids?\r\n      return\r\n    if typeof(ids) == 'object' #if multiple children\r\n      for id in ids #todo [udnefined, undefined] at end\r\n        @children.push(id['@id'])\r\n    else\r\n      @children.push(ids['@id'])\r\n\r\n  addChildren: (elements) ->\r\n    len = @children.length\r\n    for i in [0...len]\r\n      id = @children[i]\r\n      @children[i] = elements[id][0]\r\n      elements[id][0].parents = @\r\n      elements[id][1] += 1\r\n\r\n  onAction: () ->\r\n    return @children\r\n\r\n\r\nclass aText extends Section\r\n  constructor: (element) ->\r\n    super(element, 'C:/Users/Kanan-PC/Desktop/Lantern/Lantern_Examples/Lantern.owl/alternatives')\r\n    @content = element['C:/Users/Kanan-PC/Desktop/Lantern/Lantern_Examples/Lantern.owl/content']?[0]['@value']\r\n\r\n  onAction: () ->\r\n    if @children.length == 0\r\n      return @children\r\n    else if @content?\r\n#alert @content #todo read aloud\r\n      console.log @content\r\n\r\nclass Media extends Section\r\n  constructor: (element) ->\r\n    super(element)\r\n    @source = element['C:/Users/Kanan-PC/Desktop/Lantern/Lantern_Examples/Lantern.owl/source']?[0]['@value']\r\n\r\n  onAction: () ->\r\n    if @source?\r\n      console.log @source #todo play source\r\n\r\nclass Form extends Section\r\n  constructor: (element) ->\r\n    super(element)\r\n    @source = element['C:/Users/Kanan-PC/Desktop/Lantern/Lantern_Examples/Lantern.owl/source']?[0]['@value']\r\n\r\n  onAction: () ->\r\n    if @source?\r\n      console.log @source #todo place cursor on button\r\n\r\n\r\nclass Button extends Section\r\n  constructor: (element) ->\r\n    super(element)\r\n    @source = element['C:/Users/Kanan-PC/Desktop/Lantern/Lantern_Examples/Lantern.owl/source']?[0]['@value']\r\n\r\n  onAction: () ->\r\n    if @source?\r\n      console.log @source #todo go to link\r\n\r\nclass Comments\r\n  constructor: (element) ->\r\n\r\nclass notification\r\n  constructor: (element) ->\r\n\r\nclass tree\r\n  constructor: (elements) ->\r\n    @children = []\r\n    for key of elements\r\n      element = elements[key]\r\n      if element[1] == 0\r\n        element[0].parent = @\r\n        @children.push(element[0])\r\n\r\n#each class has id\r\naddElement = (element) ->\r\n  Type = element[\"@type\"][0]\r\n  filter = /[A-Za-z]*$/\r\n  Type = filter.exec(Type)[0]\r\n  obj = null\r\n\r\n  switch Type\r\n    when 'section' then new Section(element)\r\n    when 'text' then new aText(element)\r\n    when 'media' then new Media(element)\r\n    when 'form' then new Form(element)\r\n    when 'button' then new Button(element)\r\n    when 'comment' then new Comments(element)\r\n    when 'notification' then new notification(element)\r\n    else null\r\n\r\n###\r\n  Listens for events in the browser, if it's triggered it runs and then unloads itself\r\n###\r\n\r\nchrome.runtime.onInstalled.addListener ->\r\n  #storage lets multiple extension components access this parameter\r\n  chrome.storage.sync.set {s: '#3aa757'}, ->\r\n    console.log \"green\"\r\n\r\n#loaded when needed and then removed\r\nchrome.declarativeContent.onPageChanged.removeRules undefined, ->\r\n  chrome.declarativeContent.onPageChanged.addRules [\r\n    conditions: [new chrome.declarativeContent.PageStateMatcher\r\n      pageUrl: {hostEquals: 'developer.chrome.com'}\r\n    ],\r\n    actions: [new chrome.declarativeContent.ShowPageAction]\r\n  ]\r\n\r\n#listen for DOM elements\r\nchrome.runtime.onMessage.addListener (request, sender, sendResponse) ->\r\n  content = request.elements\r\n  console.log content\r\n  console.log 'I am here'\r\n\r\n  jsonld.registerRDFParser 'text/html', jsonldRdfaParser\r\n  jsonld.fromRDF content, {format: 'text/html'}, (err, data) ->\r\n    content = data\r\n    console.log data\r\n    elements = {}\r\n    mark = 0\r\n    for element in content\r\n      #Skip declarations\r\n      if mark == 0\r\n        mark = 1\r\n        continue\r\n\r\n      node = addElement(element)\r\n      if not node?\r\n        continue\r\n\r\n      a = [node, 0]\r\n      elements[node.id] = a\r\n\r\n    #elements = {id: [node, 0]...}\r\n    for key of elements\r\n      element = elements[key][0]\r\n      element.addChildren(elements)\r\n\r\n    root = new tree(elements)\r\n    elements =\r\n      elements: root.children,\r\n      index: 0,\r\n      read: 0,\r\n      notifications: []\r\n\r\n    console.log 'background.coffee'\r\n    console.log elements\r\n\r\n    chrome.storage.local.set {test: elements}\r\n\r\n#if not elements?\r\n#  elements = null\r\n#chrome.storage.local.get ['test'], (result) ->\r\n#  elements = result.test\r\n\r\n#TODO use onPageChange\r\n#If no tree, or new page, or page change\r\n  #parse tree (content script)\r\n  #read elements name (function)\r\n\r\n#On refresh rate\r\n  #parse page for notifications\r\n  #add list to notifications, change index to 0\r\n  #if change read elements name using index\r\n\r\n#Notifications OPTIONAL\r\n#Keep list of elements, {elements: [], index = 0, notifications: []}\r\n#when issuing command, if index >= len(notifications) element[index] else notifications[index]\r\n\r\n#todo OPTIONAL, listen for changes\r\n\r\n#Commands must be issued with Ctrl\r\nchrome.commands.onCommand.addListener (command) ->\r\n  alert command\r\n\r\n  chrome.storage.local.get ['test'], (result) ->\r\n    elements = result.test\r\n    if not elements? #The tree is still not generated\r\n      alert 'no elements'\r\n      return\r\n\r\n    console.log elements['elements']\r\n    ar = elements['elements'][0].children\r\n    for el in ar\r\n      chrome.tts.speak(el.name, {'enqueue': true})\r\n    #if 1, 2, 3, 4 (is for more)\r\n      #if number is functional\r\n        #if element has action\r\n          #Element.onAction (if it's a paragraph, onAction may include speaking, if it's a button clicking and if form, setting the cursor and notifying the user)\r\n          #if new list is returned\r\n          #add elements to UI, refresh index\r\n    #if 5\r\n      #if functional\r\n        #index + 4\r\n        #add elements to UI\r\n    #if esc\r\n      #if element in elements has parent has parent\r\n        #list is element.parent.parent.children()\r\n        #add elements to UI, refresh index, destroy notifications\r\n    #repeat does nothing but still reads the elements\r\n    #read list using index (function)"
  ]
}